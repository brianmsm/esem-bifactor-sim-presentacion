---
title: "Cargas cruzadas y correlaciones entre factores específicos en CFA y ESEM Bifactor"
subtitle: "Un estudio de simulación con estructuras bifactor complejas y rotación extended target"
institute: "Universidad Complutense de Madrid"
author: Brian N. Peña-Calero
format:
  metropolis-revealjs:
    mouse-wheel: true
    lang: es
    code-link: true
    progress: true
    slide-number: true
date: now
date-format: "DD MMMM, YYYY"
execute: 
  echo: true
  dpi: 300
slslslslslide-number: true
embed-resources: true
lightbox: true
editor_options: 
  chunk_output_type: console
bibliography: references.bib
---

# Introducción

## Planteamiento del Problema

Los modelos bifactor tradicionales permiten evaluar simultáneamente un factor general y múltiples factores específicos, ofreciendo índices (e.g., ω_H, ECV, PUC) que clarifican la distribución de la varianza común en una estructura factorial compleja [@rodriguez2016].

Sin embargo, en escenarios reales, podría existir más de un factor general o una estructura donde múltiples factores generales conviven junto con factores específicos, configuraciones abordadas bajo enfoques como los modelos de múltiples factores generales (Multiple General Factors - MGF; [@jiménez2023]).

## Planteamiento del Problema

En estos contextos, utilizar enfoques estrictamente confirmatorios (CFA bifactor) suele imponer restricciones poco realistas, como la ausencia completa de cargas cruzadas, generando estimaciones potencialmente sesgadas o problemas de ajuste del modelo.

La Exploratory Structural Equation Modeling (ESEM) con rotación extended target [@garcía-garzón2020; @howard2018] podría solucionar estas limitaciones, permitiendo modelar cargas cruzadas menores y expectativas teóricas flexibles sobre las correlaciones factoriales entre múltiples factores generales.

## Preguntas de Investigación

1. ¿Qué efectos tiene omitir un factor general (FG) cuando la estructura simulada contiene dos?
2. ¿Cuál es el impacto de permitir correlaciones entre factores específicos (FEs) cuando en realidad son ortogonales, y viceversa?
3. ¿Qué sucede cuando el modelo CFA/ESEM no refleja correctamente la correlación real entre los FGs?
4. ¿En qué medida las cargas cruzadas triviales, menores o moderadas afectan el ajuste y recuperación de parámetros?

## Preguntas de Investigación

5. ¿Pueden los modelos ESEM bifactor con rotación extended target inducir cargas cruzadas cuando estas no existen?
6. ¿Puede el modelo CFA bifactor recuperar correctamente la estructura cuando las cargas cruzadas (en FE o FG) son inexistentes o triviales?
7. ¿Qué diferencias existen en la precisión de recuperación de parámetros (cargas, correlaciones, convergencia) entre modelos CFA y ESEM bifactor bajo distintas condiciones simuladas?
8. ¿Qué diferencias en requisitos de tamaño muestral se presentan entre modelos CFA y ESEM bifactor?

## Hipótesis

- H1: Omitir un FG en la especificación del modelo producirá mal ajuste y sesgo en estimaciones de correlaciones entre FEs.
- H2: Modelar correlaciones entre FEs cuando no existen tenderá a generar correlaciones espurias, especialmente cuando un FG ha sido omitido.
- H3: La omisión de correlaciones reales entre FEs generará mal ajuste y sesgo en cargas.
- H4: Las cargas cruzadas reales (menores o moderadas) serán mejor recuperadas por ESEM bifactor con extended target que por CFA bifactor.
  
## Hipótesis

- H5: ESEM bifactor con extended target tenderá a generar cargas cruzadas espurias cuando estas no existen, aunque en menor magnitud si se especifica correctamente la estructura general.
- H6: CFA bifactor funcionará correctamente cuando las cargas cruzadas (en FE o FG) sean nulas o triviales, pero fallará cuando estas sean relevantes.
- H7: La correlación entre FGs influirá en la aparición de correlaciones espurias entre FEs cuando el modelo esté incorrectamente especificado.
- H8: ESEM bifactor con extended target requerirá tamaños muestrales ligeramente mayores para convergencia estable y recuperación precisa.

## Objetivos Generales

Evaluar la utilidad y precisión de los modelos ESEM bifactor con rotación extended target frente a modelos CFA bifactor tradicionales en contextos simulados con múltiples factores generales, factores específicos correlacionados o no, y distintos escenarios de cargas cruzadas.

## Objetivos Específicos

1. Comparar el ajuste global y la recuperación de parámetros entre modelos CFA y ESEM bifactor en estructuras con 2 FGs.
2. Evaluar el impacto de omitir un FG sobre las correlaciones estimadas entre FEs.
3. Determinar si modelar correlaciones entre FEs mejora el ajuste o genera sesgos cuando estas no existen en la población.
4. Explorar la aparición de cargas cruzadas espurias en modelos ESEM bifactor bajo estructuras simuladas sin cargas cruzadas reales.

## Objetivos Específicos

5. Evaluar si CFA bifactor puede recuperar correctamente la estructura en contextos sin cargas cruzadas o con cargas fantasmas (triviales).
6. Analizar el efecto del tamaño muestral sobre convergencia, ajuste y precisión de estimaciones.
7. Estimar el sesgo relativo en cargas, correlaciones y convergencia según modelo y condición simulada.

# Metodología

## Diseño de Simulación

| Factor                          | Niveles                                                                 |
|---------------------------------|-------------------------------------------------------------------------|
| Correlación entre FGs           | .20, .50, .80                                                           |
| Correlación entre FEs           | 0.00 (ortogonales), 0.30 (correlacionados)                              |
| Cargas cruzadas (FE)            | "none", "phantom" (~0 ± 0.05), "0.15", "0.25"                    |
| % de ítems con cargas cruzadas  | "0", "20%", "40%"                                                      |
| Ruta de cargas cruzadas (FE)    | "no aplica", "sameFG", "diffFG"                                         |
| Cargas cruzadas debidas al FG   | "none", "phantom" (~0 ± 0.05)                                           |

## Diseño de Simulación

| Factor                          | Niveles                                                                 |
|---------------------------------|-------------------------------------------------------------------------|
| Tamaño muestral                 | 200, 500, 800                                                           |
| Estructura simulada             | 2 FGs, 6 FEs (3 por FG), 5 ítems por FE                                  |
| Cargas principales   | FG: 0.60–0.80; FE: 0.30 ± 0.05                                           |

→ **Total: 180 combinaciones de simulación únicas (rep = 500)**

- Cuando `crossload_mag = "none"`, el `% de ítems` es `"0"`, `crossload_route = "no aplica"` y `crossload_FG = "none"`.
- Cuando `crossload_mag = "phantom"`, todas las cargas cruzadas (FE y FG) son ~0 (±0.05).
- Los otros casos de `crossload_mag`, un porcentaje (20% o 40%) de los ítems presentará dichas cargas cruzadas, mientras que el resto tendrá cargas `phantom`.

::: {.notes}
- Cuando `crossload_mag = "none"`, no se permiten cargas cruzadas, el `% de ítems` es `"0"`, `crossload_route = "no aplica"` y `crossload_FG = "none"`.
- Cuando `crossload_mag = "phantom"`, todas las cargas cruzadas (FE y FG) son ~0 (±0.05) y afectan al 100% de las posiciones no principales.
- Cuando `crossload_mag` tiene valores "0.15" o "0.25", un porcentaje (20% o 40%) de los ítems presentará dichas cargas cruzadas, mientras que el resto tendrá cargas phantom; además, `crossload_FG = "phantom"`.
:::

## Modelos a estimar

-   CFA bifactor:
    a)  1 FG con FEs ortogonales (1FG-FE⊥)
    b)  1 FG con FEs correlacionados (1FG-FE↔)
    c)  2 FGs con FEs ortogonales (2FG-FE⊥)
    d)  2 FGs con FEs correlacionados (2FG-FE↔)
-   ESEM bifactor extended target:
    e)  1 FG con FEs ortogonales (1FG-FE⊥)
    f)  1 FG con FEs correlacionados (1FG-FE↔)
    g)  2 FGs con FEs ortogonales (2FG-FE⊥)
    h)  2 FGs con FEs correlacionados (2FG-FE↔)
    
## Estimadores

Cada modelo se ajustará dos veces:  

1. **ML** (máxima verosimilitud clásica)  
2. **MLR** (máxima verosimilitud robusta Satorra–Bentler) 

::: {.callout-note}
Esto permitirá comprobar la robustez de los resultados ante pequeñas desviaciones de normalidad que podrían ser introducidas al especificar las múltiples condiciones de simulación.
:::

    
## Ejemplo de modelos:

```{r}
#| echo: false
# Parámetros
n_FG <- 2
n_FE <- 6
n_items_per_FE <- 5
total_items <- n_FE * n_items_per_FE
item_names <- paste0("Item", 1:total_items)

# Función para generar matriz de cargas con fluctuaciones pequeñas
generate_loadings <- function(n_FE, n_items_per_FE, n_FG, seed = 456) {
  set.seed(seed)
  
  total_items <- n_FE * n_items_per_FE
  loadings_general <- matrix(0, nrow = total_items, ncol = n_FG)
  loadings_specific <- matrix(0, nrow = total_items, ncol = n_FE)
  
  for (fe in 1:n_FE) {
    idx <- ((fe - 1) * n_items_per_FE + 1):(fe * n_items_per_FE)
    
    # Asignar FG según grupo
    fg <- ifelse(fe <= n_FE / 2, 1, 2)
    
    # Cargas aleatorias en rangos definidos
    loadings_general[idx, fg] <- runif(n_items_per_FE, min = 0.60, max = 0.80)
    loadings_specific[idx, fe] <- runif(n_items_per_FE, min = 0.25, max = 0.35)
  }
  
  list(
    loadings_general = loadings_general,
    loadings_specific = loadings_specific
  )
}

generate_esem_loadings <- function(n_FE, n_items_per_FE, n_FG, crossload_type = "phantom", seed = 123) {
  set.seed(seed)
  
  total_items <- n_FE * n_items_per_FE
  loadings_general <- matrix(0, nrow = total_items, ncol = n_FG)
  loadings_specific <- matrix(0, nrow = total_items, ncol = n_FE)
  
  # --- CARGAS PRINCIPALES ---
  for (fe in 1:n_FE) {
    idx <- ((fe - 1) * n_items_per_FE + 1):(fe * n_items_per_FE)
    fg <- ifelse(fe <= n_FE / 2, 1, 2)
    
    # Asignar cargas principales
    loadings_general[idx, fg] <- runif(n_items_per_FE, 0.60, 0.80)
    loadings_specific[idx, fe] <- runif(n_items_per_FE, 0.25, 0.35)
  }
  
  # --- CARGAS CRUZADAS ---
  phantom_range <- c(-0.05, 0.05)
  possible_mags <- c("0.15" = 0.15, "0.25" = 0.25, "0.40" = 0.40)
  
  if (crossload_type == "none") {
    # Solo se agregan cargas phantom (muy pequeñas) en factores donde no carga el ítem
    loadings_specific[loadings_specific == 0] <- runif(sum(loadings_specific == 0), phantom_range[1], phantom_range[2])
    
  } else if (crossload_type == "phantom") {
    loadings_specific[loadings_specific == 0] <- runif(sum(loadings_specific == 0), phantom_range[1], phantom_range[2])
    loadings_general[loadings_general == 0] <- runif(sum(loadings_general == 0), phantom_range[1], phantom_range[2])
    
  } else if (crossload_type %in% names(possible_mags)) {
    magnitude <- possible_mags[[crossload_type]]
    perc_items <- ifelse(crossload_type == "0.15", 0.2, 0.4)
    n_crossloadings <- round(total_items * perc_items)
    
    candidate_rows <- sample(1:total_items, n_crossloadings, replace = FALSE)
    
    for (item in candidate_rows) {
      fe_main <- which(loadings_specific[item, ] != 0)
      fe_possible <- setdiff(1:n_FE, fe_main)
      fe_target <- sample(fe_possible, 1)
      loadings_specific[item, fe_target] <- magnitude
    }
    
    # Phantom en FEs no asignados
    loadings_specific[loadings_specific == 0] <- runif(sum(loadings_specific == 0), phantom_range[1], phantom_range[2])
    
    # También phantom en FGs no asignados
    loadings_general[loadings_general == 0] <- runif(sum(loadings_general == 0), phantom_range[1], phantom_range[2])
    
  } else {
    stop("Tipo de carga cruzada no reconocido.")
  }
  
  # Resultado combinado
  cbind(loadings_general, loadings_specific)
}

# Crear matriz fija de cargas una sola vez
bifactor_cfa <- generate_loadings(n_FE, n_items_per_FE, n_FG)

bifactor_cfa_matrix <- cbind(bifactor_cfa$loadings_general, bifactor_cfa$loadings_specific)
# Generar matriz ESEM bifactor
esem_matrix <- generate_esem_loadings(n_FE, n_items_per_FE, n_FG, crossload_type = "0.25",
                                      seed = 123)
```

```{r}
#| echo: false
library(plot.matrix)
```

::::: columns
::: {.column width="50%"}
```{r}
#| fig-width: 6.5
#| fig-height: 5.5
par(mar = c(4, 4, 2, 3.5))
plot(bifactor_cfa_matrix, main = "CFA Bifactor")
```
:::

::: {.column width="50%"}
```{r}
#| fig-width: 6.5
#| fig-height: 5.5
par(mar = c(4, 4, 2, 3.5))
plot(esem_matrix, main = "ESEM Bifactor con carga cruzada")
```
:::
:::::




## Plan de Análisis

1.  **Ajuste global del modelo**: CFI, TLI, RMSEA, SRMR, USRMR
2.  **Convergencia**: porcentaje de soluciones convergentes por condición y modelo
3. **Precisión de los parámetros**  
   - Sesgo y RMSE de cargas principales y cruzadas  
   - **MCSE** de cada estadístico (error Monte‑Carlo) 
    $$
    \text{MCSE}(\hat{\theta}) = \frac{SD(\hat{\theta})}{\sqrt{R}}
    $$
    
   - **Bias de EE**: $\overline{SE} - SD(\hat \theta)$ relativo a $SD(\hat \theta)$ 
   - **Cobertura 95 %** de los IC para $\lambda$ y $\rho$  
    
## Plan de Análisis

4. **Detección de efectos espurios**  
   - *Cargas estimadas más allá de lo que debería*:  
     - Si $\lambda_{pop}=0$ → espuria si $|\hat \lambda| ≥ .10$  (.15 en análisis de sensibilidad)
     - Si $\lambda_{pop} \approx 0$ (phantom) → espuria si $|\hat \lambda - \lambda_{pop}| ≥ .10$. 
   - *Correlaciones*: criterio análogo para $\rho_{pop}=0$  
5.  **Comparación de modelos**:
    -   ¿Cuál ofrece mejor ajuste y menor sesgo según cada estructura?
    -   ¿Cuál es más robusto frente a especificación incorrecta?
6. **Evaluación según tamaño muestral**:
    - Comparar convergencia, ajuste y precisión entre N = 200, 500 y 800.

# Sobre la Simulación

## Procedimientos con software

::::: columns
::: {.column width="80%"}
Para la ejecución de este estudio se utilizó el paquete [`SimDesign`](https://CRAN.R-project.org/package=SimDesign) de R, el cual permite construir estudios de simulación siguiendo principios robustos de diseño experimental:

1.  **`createDesign()`**: genera la matriz de condiciones del estudio.
2.  **`Generate()`**: simula los datos en base a cada condición.
3.  **`Analyse()`**: ejecuta los análisis especificados.
4.  **`Summarise()`**: resume resultados por condición.
5.  **`runSimulation()`**: integra todo el procedimiento con múltiples replicaciones.
:::

::: {.column width="20%"}
<br>
<br>
<br>
![](images/SimDesign-logo.png)
:::
:::::

## Gestión de scripts

El proyecto tendrá una estructura modular para la adecuada gestión de la simulación:

```
/simulacion-esem-bifactor/
│
├── 01-design.R            # Definición del diseño con createDesign()
├── 02-generate.R          # Función Generate()
├── 03-analyse.R           # Función Analyse()
├── 04-summarise.R         # Función Summarise()
├── 05-runSimulation.R     # Lógica principal que une todo y lanza SimDesign
│
├── /helpers/              # Funciones auxiliares (ej. crear matrices lambda, etc.)
│   └── simulate_structure.R
│
└── /outputs/              # Carpeta para guardar resultados
```

## Primero: createDesign()

```{r}
library(SimDesign)

Design <- createDesign(
  corr_FG = c(0.20, 0.50, 0.80),
  corr_FE = c(0.00, 0.30),
  crossload_mag = c("none", "phantom", "0.15", "0.25"),
  crossload_perc = c("0", "0.20", "0.40"),
  crossload_route = c("no_aplica", "sameFG", "diffFG"),
  crossload_FG = c("none", "phantom"),
  N = c(200, 500, 800),
  
  subset = !(
    # crossload_mag == "none" → todo debe ser explícitamente "none", "0", "no_aplica"
    (crossload_mag == "none" &
       (crossload_perc != "0" | crossload_route != "no_aplica" | crossload_FG != "none")) |
      
      # crossload_mag == "phantom" → también es una forma pura
      (crossload_mag == "phantom" &
         (crossload_perc != "0" | crossload_route != "no_aplica" | crossload_FG != "phantom")) |
      
      # Si hay cargas cruzadas reales (magnitudes definidas)
      (crossload_mag %in% c("0.15", "0.25", "0.40") & 
         (crossload_perc == "0" | crossload_route == "no_aplica" | crossload_FG != "phantom"))
  )
)
```

## Primero: createDesign()

```{r}
Design
```


## Referencias

::: {#refs style="line-height: 1.5;"}
:::
